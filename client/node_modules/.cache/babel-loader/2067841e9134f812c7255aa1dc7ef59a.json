{"ast":null,"code":"var _jsxFileName = \"/home/harsh_jaiswal/Desktop/new/client/src/components/Experiences/Experiences.js\";\nimport React from 'react';\nimport { Grid, Paper, LinearProgress, Grow } from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport ExperiencesTheme from './ExperiencesTheme';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\nimport moment from 'moment';\nexport default function Experience({\n  visible\n}) {\n  const classes = ExperiencesTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n  return profile.experiences.length ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grow, {\n    in: visible,\n    timeout: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: hovered ? classes.experienceContainerHoverd : classes.experienceContainer,\n    onMouseEnter: toggleHover,\n    onMouseLeave: toggleHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Experience\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    classes: {\n      root: classes.root,\n      colorPrimary: classes.colorPrimary,\n      bar: classes.bar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), profile.experiences.map((experience, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.singleExperienceContainer,\n    key: uuid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.roleName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, experience.role), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, `${moment(experience.timeFrom).format('MMM YYYY')} - ${experience.currentlyWorking ? 'Present' : moment(experience.timeTo).format('MMM YYYY')}`), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.company,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, experience.name), index !== profile.experiences.length - 1 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }))))))) : null;\n}","map":{"version":3,"names":["React","Grid","Paper","LinearProgress","Grow","useRecoilValue","profileState","ExperiencesTheme","v4","uuid","moment","Experience","visible","classes","profile","hovered","setHovered","useState","toggleHover","experiences","length","createElement","item","container","md","xs","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","in","timeout","className","experienceContainerHoverd","experienceContainer","onMouseEnter","onMouseLeave","heading","root","colorPrimary","bar","map","experience","index","singleExperienceContainer","key","roleName","role","time","timeFrom","format","currentlyWorking","timeTo","company","name","divider"],"sources":["/home/harsh_jaiswal/Desktop/new/client/src/components/Experiences/Experiences.js"],"sourcesContent":["import React from 'react';\nimport { Grid, Paper, LinearProgress, Grow } from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport ExperiencesTheme from './ExperiencesTheme';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\nimport moment from 'moment';\n\nexport default function Experience({ visible }) {\n  const classes = ExperiencesTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  return profile.experiences.length ? (\n    <Grid item container md={4} xs={12}>\n      <Grow in={visible} timeout={1000}>\n        <Paper\n          className={\n            hovered\n              ? classes.experienceContainerHoverd\n              : classes.experienceContainer\n          }\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          <Grid item xs={12} className={classes.heading}>\n            Experience\n          </Grid>\n          <Grid item xs={12}>\n            <LinearProgress\n              classes={{\n                root: classes.root,\n                colorPrimary: classes.colorPrimary,\n                bar: classes.bar,\n              }}\n            />\n          </Grid>\n\n          {profile.experiences.map((experience, index) => (\n            <Grid\n              container\n              className={classes.singleExperienceContainer}\n              key={uuid()}\n            >\n              <Grid item xs={12} className={classes.roleName}>\n                {experience.role}\n              </Grid>\n              <Grid item xs={12} className={classes.time}>\n                {`${moment(experience.timeFrom).format('MMM YYYY')} - ${\n                  experience.currentlyWorking\n                    ? 'Present'\n                    : moment(experience.timeTo).format('MMM YYYY')\n                }`}\n              </Grid>\n              <Grid item xs={12} className={classes.company}>\n                {experience.name}\n              </Grid>\n              {index !== profile.experiences.length - 1 && (\n                <Grid item xs={12}>\n                  <hr className={classes.divider} />\n                </Grid>\n              )}\n            </Grid>\n          ))}\n        </Paper>\n      </Grow>\n    </Grid>\n  ) : null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}