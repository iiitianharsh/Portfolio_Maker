{"ast":null,"code":"var _jsxFileName = \"/home/harsh_jaiswal/Desktop/new/client/src/components/ListContacts/ListContacts.js\";\nimport React from 'react';\nimport { Grid, Paper, Grow, Link, useMediaQuery, useTheme } from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport ListContactsTheme from './ListContactsTheme';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\n\nexport default function ListContacts({\n  visible\n}) {\n  const classes = ListContactsTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n  const setOfContacts = new Set([\n  // skills for which icon is present\n  'facebook', 'twitter', 'instagram', 'linkedin', 'github', 'steam']);\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    spacing: 5,\n    className: classes.containerGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, matches && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Grow, {\n    in: visible,\n    timeout: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: hovered ? classes.contactsContainerHoverd : classes.contactsContainer,\n    onMouseEnter: toggleHover,\n    onMouseLeave: toggleHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    justify: \"space-around\",\n    className: classes.allContactsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, Object.entries(profile.connect).map(service => service[1] !== '' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    key: uuid(),\n    className: classes.singleContactContainer\n    // Link Part\n    ,\n    component: Link,\n    href: `${service[1]}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.contactIconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, setOfContacts.has(service[0].toLowerCase()) ? /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/contact/${service[0].toLowerCase()}.svg`,\n    alt: service[0],\n    className: classes.contactIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/contact/defaultcontact.svg`,\n    alt: service[0],\n    className: classes.contactIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.contactName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, capitalizeFirstLetter(service[0]))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    key: uuid(),\n    className: classes.singleContactContainer\n    // Link Part\n    ,\n    component: Link,\n    href: `mailto:${profile.user.email}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.contactIconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/contact/email.svg`,\n    alt: \"email\",\n    className: classes.contactIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.contactName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Email\"))))))), matches && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }));\n}","map":{"version":3,"names":["React","Grid","Paper","Grow","Link","useMediaQuery","useTheme","useRecoilValue","profileState","ListContactsTheme","v4","uuid","ListContacts","visible","classes","profile","hovered","setHovered","useState","toggleHover","theme","matches","breakpoints","up","setOfContacts","Set","capitalizeFirstLetter","string","charAt","toUpperCase","slice","createElement","container","justify","spacing","className","containerGrid","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","md","in","timeout","xs","contactsContainerHoverd","contactsContainer","onMouseEnter","onMouseLeave","allContactsContainer","Object","entries","connect","map","service","key","singleContactContainer","component","href","target","rel","direction","contactIconContainer","has","toLowerCase","src","alt","contactIcon","contactName","user","email"],"sources":["/home/harsh_jaiswal/Desktop/new/client/src/components/ListContacts/ListContacts.js"],"sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Paper,\n  Grow,\n  Link,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport ListContactsTheme from './ListContactsTheme';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\n\nexport default function ListContacts({ visible }) {\n  const classes = ListContactsTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n  const setOfContacts = new Set([\n    // skills for which icon is present\n    'facebook',\n    'twitter',\n    'instagram',\n    'linkedin',\n    'github',\n    'steam',\n  ]);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  return (\n    <Grid\n      container\n      justify='space-around'\n      spacing={5}\n      className={classes.containerGrid}\n    >\n      {matches && <Grid item md={3}></Grid>}\n      <Grow in={visible} timeout={1000}>\n        <Grid item container xs={12} md={6}>\n          <Paper\n            className={\n              hovered\n                ? classes.contactsContainerHoverd\n                : classes.contactsContainer\n            }\n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n          >\n            <Grid\n              container\n              spacing={5}\n              justify='space-around'\n              className={classes.allContactsContainer}\n            >\n              {Object.entries(profile.connect).map(\n                service =>\n                  service[1] !== '' && (\n                    <Grid\n                      item\n                      xs={6}\n                      key={uuid()}\n                      className={classes.singleContactContainer}\n                      // Link Part\n                      component={Link}\n                      href={`${service[1]}`}\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <Grid container direction='column'>\n                        <Grid\n                          item\n                          xs={12}\n                          className={classes.contactIconContainer}\n                        >\n                          {setOfContacts.has(service[0].toLowerCase()) ? (\n                            <img\n                              src={`/images/contact/${service[0].toLowerCase()}.svg`}\n                              alt={service[0]}\n                              className={classes.contactIcon}\n                            />\n                          ) : (\n                            <img\n                              src={`/images/contact/defaultcontact.svg`}\n                              alt={service[0]}\n                              className={classes.contactIcon}\n                            />\n                          )}\n                        </Grid>\n                        <Grid item xs={12} className={classes.contactName}>\n                          {capitalizeFirstLetter(service[0])}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )\n              )}\n\n              {/* Email */}\n              <Grid\n                item\n                xs={6}\n                key={uuid()}\n                className={classes.singleContactContainer}\n                // Link Part\n                component={Link}\n                href={`mailto:${profile.user.email}`}\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <Grid container direction='column'>\n                  <Grid item xs={12} className={classes.contactIconContainer}>\n                    <img\n                      src={`/images/contact/email.svg`}\n                      alt='email'\n                      className={classes.contactIcon}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.contactName}>\n                    Email\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grow>\n      {matches && <Grid item md={3}></Grid>}\n    </Grid>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}